# This workflow builds and deploys the renal failure api to the Azure AKS cluster
name: Deploy to Azure Cluster

on:
  push:
    branches:
      - develop
      - master
  workflow_dispatch:

# Environment variables available to all jobs and steps in this workflow
env:
  NAMESPACE: csbplatform
  REGISTRY_NAME: csbplatform
  CLUSTER_NAME: aks-clearphoenix-dev
  CLUSTER_RESOURCE_GROUP: rg-clearphoenix-dev
  APP_NAME: dockertest

jobs:
  deploy:
    name: Deploy app on Azure AKS
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v3

      # Connect to ACR
      - uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      # Container build and push to ACR
      - run: |
            docker build . -t ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:v1
            docker push ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:v1

      # Set the target AKS cluster.
      - uses: Azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: ${{ env.CLUSTER_NAME }}
          resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}

      # Create namespace if it doesn't exist
      - run: |
          kubectl create namespace ${{ env.NAMESPACE }} --dry-run=client -o json | kubectl apply -f -

      # Create image pull secret for ACR
      - uses: azure/k8s-create-secret@v1
        with:
          container-registry-url: ${{ env.REGISTRY_NAME }}.azurecr.io
          container-registry-username: ${{ secrets.REGISTRY_USERNAME }}
          container-registry-password: ${{ secrets.REGISTRY_PASSWORD }}
          secret-name: renalapi-secret
          namespace: ${{ env.NAMESPACE }}
          arguments: --force true

      # Deploy app to AKS
      - uses: azure/k8s-deploy@v1
        with:
          manifests: |
            ${{ github.workspace }}/manifests/service.yaml
            ${{ github.workspace }}/manifests/deployment.yaml
          images: |
            ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:v1
          imagepullsecrets: |
            ${{ env.SECRET }}
          namespace: ${{ env.NAMESPACE }}
